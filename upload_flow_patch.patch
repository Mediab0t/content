diff --git a/.circleci/config.yml b/.circleci/config.yml
index 73a7ed519..f0ea6ee83 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -467,32 +467,14 @@ references:
   bucket_upload_jobs: &bucket_upload_jobs
     - Setup Environment:
         context: bucket_upload_env
-    - Run Unit Testing And Lint:
-        context: bucket_upload_env
-        requires:
-          - Setup Environment
-    - Run Validations:
-        context: bucket_upload_env
-        requires:
-          - Setup Environment
     - Create Instances:
         context: bucket_upload_env
         requires:
-          - Run Unit Testing And Lint
-          - Run Validations
-    - Install Packs in Server 6_0:
-        context: bucket_upload_env
-        requires:
-          - Create Instances
-    - Install Packs in Server Master:
-        context: bucket_upload_env
-        requires:
-          - Create Instances
+          - Setup Environment
     - Upload Packs To Marketplace:
         context: bucket_upload_env
         requires:
-          - Install Packs in Server 6_0
-          - Install Packs in Server Master
+           - Create Instances
 
   check_user_permissions_to_upload_packs: &check_user_permissions_to_upload_packs
     when:
@@ -936,7 +918,6 @@ jobs:
       - *attach_workspace
       - *add_ssh_keys
       - *prepare_environment
-      - *check_user_permissions_to_upload_packs
       - run:
           name: Force Upload Packs To Marketplace Storage
           command: |
@@ -949,9 +930,10 @@ jobs:
             echo $GCS_MARKET_KEY > $GCS_PATH
 
             GCS_BUILD_BUCKET="marketplace-ci-build"
-            GCS_MARKET_BUCKET="marketplace-dist"
+            GCS_MARKET_BUCKET="marketplace-dist-dev"
+            STORAGE_BATH_PATH="upload-flow/builds/$CIRCLE_BRANCH/$CREATE_INSTANCES_JOB_NUMBER/content/packs"
 
-            python3 ./Tests/Marketplace/copy_and_upload_packs.py -a $PACK_ARTIFACTS -e $EXTRACT_FOLDER -pb "$GCS_MARKET_BUCKET" -bb "$GCS_BUILD_BUCKET" -s $GCS_PATH -n $CREATE_INSTANCES_JOB_NUMBER -c $CIRCLE_BRANCH -p "${PACKS_TO_UPLOAD}"
+            python3 ./Tests/Marketplace/copy_and_upload_packs.py -a $PACK_ARTIFACTS -e $EXTRACT_FOLDER -pb "$GCS_MARKET_BUCKET" -bb "$GCS_BUILD_BUCKET" -s $GCS_PATH -n $CREATE_INSTANCES_JOB_NUMBER -c $CIRCLE_BRANCH -p "${PACKS_TO_UPLOAD}" -pbp "${STORAGE_BATH_PATH}"
             rm $GCS_PATH
           when: on_success
       - *store_artifacts
@@ -964,11 +946,10 @@ jobs:
       - *attach_workspace
       - *add_ssh_keys
       - *prepare_environment
-      - *check_user_permissions_to_upload_packs
       - when:
           condition:
             equal:
-              - master
+              - modified-pack-dates-test
               - << pipeline.git.branch >>
           steps:
             - run:
@@ -983,9 +964,10 @@ jobs:
                   echo $GCS_MARKET_KEY > $GCS_PATH
 
                   GCS_BUILD_BUCKET="marketplace-ci-build"
-                  GCS_MARKET_BUCKET="marketplace-dist"
+                  GCS_MARKET_TESTING_BUCKET="marketplace-dist-dev"
+                  SOURCE_TESTING_PATH="upload-flow/builds/$CIRCLE_BRANCH/$CREATE_INSTANCES_JOB_NUMBER/content/packs"
 
-                  python3 ./Tests/Marketplace/copy_and_upload_packs.py -a $PACK_ARTIFACTS -e $EXTRACT_FOLDER -pb "$GCS_MARKET_BUCKET" -bb "$GCS_BUILD_BUCKET" -s $GCS_PATH -n $CREATE_INSTANCES_JOB_NUMBER -c $CIRCLE_BRANCH
+                  python3 ./Tests/Marketplace/copy_and_upload_packs.py -a $PACK_ARTIFACTS -e $EXTRACT_FOLDER -pb "$GCS_MARKET_TESTING_BUCKET" -bb "$GCS_BUILD_BUCKET" -s $GCS_PATH -n $CREATE_INSTANCES_JOB_NUMBER -c $CIRCLE_BRANCH -pbp "$SOURCE_TESTING_PATH"
                   rm $GCS_PATH
             - run:
                 name: Validate Premium Packs
@@ -1249,7 +1231,7 @@ workflows:
           filters:
             branches:
               only:
-                - master
+                - modified-pack-dates-test
           requires:
             - Setup Environment
       - Force Upload Packs To Marketplace:
@@ -1257,7 +1239,7 @@ workflows:
           filters:
             branches:
               only:
-                - master
+                - modified-pack-dates-test
           requires:
             - Create Instances
 
diff --git a/Packs/Cyberint/Integrations/Cyberint/README.md b/Packs/Cyberint/Integrations/Cyberint/README.md
index 560f9e4b5..370e58025 100644
--- a/Packs/Cyberint/Integrations/Cyberint/README.md
+++ b/Packs/Cyberint/Integrations/Cyberint/README.md
@@ -598,7 +598,7 @@ List alerts according to parameters
                     "email": "avital@cyberint.com"
                 },
                 "created_date": "2020-12-30T00:00:23",
-                "description": "Cyberint detected payment cards belonging to Joe customers being offered for sale online for 18$. The cards' information, published by a threat actors named Dolly, includes the BIN number of the card, expiration date and CVV digits as well as some PII of the card owner.\nCompromised payment card details, especially when combined with exposed PII, can be purchased and abused by threat actors for illegitimate and fraudulent activities. Those, in turn, will result in chargeback costs for the bank and potential customer churn.",
+                "description": "Cyberint detected payment cards belonging to Wells Fargo customers being offered for sale online for 18$. The cards' information, published by a threat actors named Dolly, includes the BIN number of the card, expiration date and CVV digits as well as some PII of the card owner.\nCompromised payment card details, especially when combined with exposed PII, can be purchased and abused by threat actors for illegitimate and fraudulent activities. Those, in turn, will result in chargeback costs for the bank and potential customer churn.",
                 "environment": "Argos Demo",
                 "impacts": [
                     "revenue_loss",
@@ -609,7 +609,7 @@ List alerts according to parameters
                 "iocs": [],
                 "modification_date": "2020-12-30T00:00:23",
                 "publish_date": "2020-08-17T00:00:00",
-                "recommendation": "Cyberint recommends Joe purchase one of the payment cards in order to then verify validity. Upon confirmation, Cyberint recommends cancelling the payment cards in order to prevent their abuse, and informing the card holders of the cancellation.\nCyberint can make the test purchase on behalf of the bank.",
+                "recommendation": "Cyberint recommends Wells Fargo purchase one of the payment cards in order to then verify validity. Upon confirmation, Cyberint recommends cancelling the payment cards in order to prevent their abuse, and informing the card holders of the cancellation.\nCyberint can make the test purchase on behalf of the bank.",
                 "ref_id": "ARG-1",
                 "related_entities": [],
                 "severity": "medium",
diff --git a/Packs/Cyberint/TestPlaybooks/playbook-Cyberint_Test.yml b/Packs/Cyberint/TestPlaybooks/playbook-Cyberint_Test.yml
index 08e3a5830..41ceb8c89 100644
--- a/Packs/Cyberint/TestPlaybooks/playbook-Cyberint_Test.yml
+++ b/Packs/Cyberint/TestPlaybooks/playbook-Cyberint_Test.yml
@@ -1,421 +1,421 @@
-id: playbook-Cyberint_Test
-name: playbook-Cyberint_Test
-version: -1
-starttaskid: '0'
-tasks:
-  '0':
-    id: '0'
-    taskid: 0145a4ef-1dc0-4693-8628-ec317f3e12ff
-    type: start
-    task:
-      id: 0145a4ef-1dc0-4693-8628-ec317f3e12ff
-      version: -1
-      name: ''
-      iscommand: false
-      brand: ''
-      description: ''
-    nexttasks:
-      '#none#':
-      - '1'
-    separatecontext: false
-    view: '{"position": {"x": 50, "y": 50}}'
-    note: false
-    timertriggers: []
-    ignoreworker: false
-  '1':
-    id: 1
-    taskid: 193e0203-d233-41ef-8b4b-7ed27d74e4fd
-    type: regular
-    task:
-      id: 193e0203-d233-41ef-8b4b-7ed27d74e4fd
-      version: -1
-      name: DeleteContext
-      description: ''
-      script: DeleteContext
-      type: regular
-      iscommand: true
-      brand: ''
-    nexttasks:
-      '#none#':
-      - '2'
-    scriptarguments:
-      all:
-        simple: yes
-    separatecontext: false
-    view: '{"position": {"x": 50, "y": 200}}'
-    note: false
-    timertriggers: []
-    ignoreworker: false
-    skipunavailable: false
-  '2':
-    id: 2
-    taskid: c3a162cb-7156-478f-8995-bb2a6d5b36e3
-    type: regular
-    task:
-      id: c3a162cb-7156-478f-8995-bb2a6d5b36e3
-      version: -1
-      name: cyberint-list-alerts
-      description: ''
-      script: '|||cyberint-list-alerts'
-      type: regular
-      iscommand: true
-      brand: ''
-    nexttasks:
-      '#none#':
-      - '3'
-    scriptarguments: {}
-    separatecontext: false
-    view: '{"position": {"x": 50, "y": 400}}'
-    note: false
-    timertriggers: []
-    ignoreworker: false
-    skipunavailable: false
-  '3':
-    id: '3'
-    taskid: 0250a72b-0239-4fb4-8da8-7c48c883e293
-    type: condition
-    task:
-      id: 0250a72b-0239-4fb4-8da8-7c48c883e293
-      version: -1
-      name: Verify Outputs
-      type: condition
-      iscommand: false
-      description: ''
-      brand: ''
-    nexttasks:
-      yes:
-      - '4'
-    separatecontext: false
-    conditions:
-    - label: yes
-      condition:
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.ref_id
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.confidence
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.status
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.severity
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.created_by.email
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.created_date
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.category
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.type
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.source_category
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.source
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.targeted_vectors
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.targeted_brands
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.related_entities
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.impacts
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.acknowledged_date
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.acknowledged_by.email
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.publish_date
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.title
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.url
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.detection_reasons
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.tool_name
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.application
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.source
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.domain
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.subdomian
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.misconfiguration_type
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.ip
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.port
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.service
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.access_token
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.access_token_type
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.username
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.email
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.author_email_address
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.repository_name
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.mail_server
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.alert_data.blacklist_repository
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.ioc.type
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.ioc.value
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.ticket_id
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.threat_actor
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.modification_date
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.closure_date
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.closed_by.email
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.closure_reason
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.description
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.recommendation
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.tags
-            iscontext: true
-    view: '{"position": {"x": 50, "y": 600}}'
-    note: false
-    timertriggers: []
-    ignoreworker: false
-    skipunavailable: false
-  '4':
-    id: 4
-    taskid: 76117792-93a4-4992-808b-47e7980da5d8
-    type: regular
-    task:
-      id: 76117792-93a4-4992-808b-47e7980da5d8
-      version: -1
-      name: cyberint-update-alerts
-      description: ''
-      script: '|||cyberint-update-alerts'
-      type: regular
-      iscommand: true
-      brand: ''
-    nexttasks:
-      '#none#':
-      - '5'
-    scriptarguments: {}
-    separatecontext: false
-    view: '{"position": {"x": 50, "y": 800}}'
-    note: false
-    timertriggers: []
-    ignoreworker: false
-    skipunavailable: false
-  '5':
-    id: '5'
-    taskid: f8ca21f6-090a-4630-8c57-9e384f47fe34
-    type: condition
-    task:
-      id: f8ca21f6-090a-4630-8c57-9e384f47fe34
-      version: -1
-      name: Verify Outputs
-      type: condition
-      iscommand: false
-      description: ''
-      brand: ''
-    nexttasks:
-      yes:
-      - '6'
-    separatecontext: false
-    conditions:
-    - label: yes
-      condition:
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.ref_id
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.status
-            iscontext: true
-      - - operator: isNotEmpty
-          left:
-            value:
-              simple: Cyberint.Alert.closure_reason
-            iscontext: true
-    view: '{"position": {"x": 50, "y": 1000}}'
-    note: false
-    timertriggers: []
-    ignoreworker: false
-    skipunavailable: false
-  '6':
-    id: '6'
-    taskid: 4a4ca1d1-f93f-45e7-8b12-40c665a58bfc
-    type: title
-    task:
-      id: 4a4ca1d1-f93f-45e7-8b12-40c665a58bfc
-      version: -1
-      name: Test Done
-      type: title
-      iscommand: false
-      brand: ''
-      description: ''
-    separatecontext: false
-    view: '{"position": {"x": 50, "y": 1200}}'
-    note: false
-    timertriggers: []
-    ignoreworker: false
-    skipunavailable: false
-view: '{"linkLabelsPosition": {}, "paper": {"dimensions": {"height": 200, "width":
-  380, "x": 50, "y": 50}}}'
-inputs: []
-outputs: []
+id: playbook-Cyberint_Test
+name: playbook-Cyberint_Test
+version: -1
+starttaskid: '0'
+tasks:
+  '0':
+    id: '0'
+    taskid: '0'
+    type: start
+    task:
+      id: '0'
+      version: -1
+      name: ''
+      iscommand: false
+      brand: ''
+      description: ''
+    nexttasks:
+      '#none#':
+      - '1'
+    separatecontext: false
+    view: '{"position": {"x": 50, "y": 50}}'
+    note: false
+    timertriggers: []
+    ignoreworker: false
+  '1':
+    id: 1
+    taskid: '1'
+    type: regular
+    task:
+      id: '1'
+      version: -1
+      name: DeleteContext
+      description: ''
+      script: DeleteContext
+      type: regular
+      iscommand: true
+      brand: ''
+    nexttasks:
+      '#none#':
+      - '2'
+    scriptarguments:
+      all:
+        simple: yes
+    separatecontext: false
+    view: '{"position": {"x": 50, "y": 200}}'
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+  '2':
+    id: 2
+    taskid: '2'
+    type: regular
+    task:
+      id: '2'
+      version: -1
+      name: cyberint-list-alerts
+      description: ''
+      script: '|||cyberint-list-alerts'
+      type: regular
+      iscommand: true
+      brand: ''
+    nexttasks:
+      '#none#':
+      - '3'
+    scriptarguments: {}
+    separatecontext: false
+    view: '{"position": {"x": 50, "y": 400}}'
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+  '3':
+    id: '3'
+    taskid: '3'
+    type: condition
+    task:
+      id: '3'
+      version: -1
+      name: Verify Outputs
+      type: condition
+      iscommand: false
+      description: ''
+      brand: ''
+    nexttasks:
+      yes:
+      - '4'
+    separatecontext: false
+    conditions:
+    - label: yes
+      condition:
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.ref_id
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.confidence
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.status
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.severity
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.created_by.email
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.created_date
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.category
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.type
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.source_category
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.source
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.targeted_vectors
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.targeted_brands
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.related_entities
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.impacts
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.acknowledged_date
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.acknowledged_by.email
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.publish_date
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.title
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.url
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.detection_reasons
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.tool_name
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.application
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.source
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.domain
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.subdomian
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.misconfiguration_type
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.ip
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.port
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.service
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.access_token
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.access_token_type
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.username
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.email
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.author_email_address
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.repository_name
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.mail_server
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.alert_data.blacklist_repository
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.ioc.type
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.ioc.value
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.ticket_id
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.threat_actor
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.modification_date
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.closure_date
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.closed_by.email
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.closure_reason
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.description
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.recommendation
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.tags
+            iscontext: true
+    view: '{"position": {"x": 50, "y": 600}}'
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+  '4':
+    id: 4
+    taskid: '4'
+    type: regular
+    task:
+      id: '4'
+      version: -1
+      name: cyberint-update-alerts
+      description: ''
+      script: '|||cyberint-update-alerts'
+      type: regular
+      iscommand: true
+      brand: ''
+    nexttasks:
+      '#none#':
+      - '5'
+    scriptarguments: {}
+    separatecontext: false
+    view: '{"position": {"x": 50, "y": 800}}'
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+  '5':
+    id: '5'
+    taskid: '5'
+    type: condition
+    task:
+      id: '5'
+      version: -1
+      name: Verify Outputs
+      type: condition
+      iscommand: false
+      description: ''
+      brand: ''
+    nexttasks:
+      yes:
+      - '6'
+    separatecontext: false
+    conditions:
+    - label: yes
+      condition:
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.ref_id
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.status
+            iscontext: true
+      - - operator: isNotEmpty
+          left:
+            value:
+              simple: Cyberint.Alert.closure_reason
+            iscontext: true
+    view: '{"position": {"x": 50, "y": 1000}}'
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+  '6':
+    id: '6'
+    taskid: '6'
+    type: title
+    task:
+      id: '6'
+      version: -1
+      name: Test Done
+      type: title
+      iscommand: false
+      brand: ''
+      description: ''
+    separatecontext: false
+    view: '{"position": {"x": 50, "y": 1200}}'
+    note: false
+    timertriggers: []
+    ignoreworker: false
+    skipunavailable: false
+view: '{"linkLabelsPosition": {}, "paper": {"dimensions": {"height": 200, "width":
+  380, "x": 50, "y": 50}}}'
+inputs: []
+outputs: []
 fromversion: 5.0.0
\ No newline at end of file
diff --git a/Tests/Marketplace/marketplace_services.py b/Tests/Marketplace/marketplace_services.py
index c41c142cd..fd83e15c5 100644
--- a/Tests/Marketplace/marketplace_services.py
+++ b/Tests/Marketplace/marketplace_services.py
@@ -59,7 +59,7 @@ class GCPConfig(object):
     STORAGE_CONTENT_PATH = "content"  # base path for content in gcs
     USE_GCS_RELATIVE_PATH = True  # whether to use relative path in uploaded to gcs images
     GCS_PUBLIC_URL = "https://storage.googleapis.com"  # disable-secrets-detection
-    PRODUCTION_BUCKET = "marketplace-dist"
+    PRODUCTION_BUCKET = "marketplace-dist-dev"
     CI_BUILD_BUCKET = "marketplace-ci-build"
     PRODUCTION_PRIVATE_BUCKET = "marketplace-dist-private"
     CI_PRIVATE_BUCKET = "marketplace-ci-build-private"
diff --git a/Tests/scripts/prepare_content_packs_for_testing.sh b/Tests/scripts/prepare_content_packs_for_testing.sh
index 5752a09e7..43f1b4322 100644
--- a/Tests/scripts/prepare_content_packs_for_testing.sh
+++ b/Tests/scripts/prepare_content_packs_for_testing.sh
@@ -30,8 +30,14 @@ CONTENT_FULL_TARGET_PATH="$GCS_BUILD_BUCKET/$BUILD_BUCKET_PATH/content"
 BUCKET_FULL_TARGET_PATH="$GCS_BUILD_BUCKET/$BUILD_BUCKET_PATH"
 
 # ====== PRODUCTION CONFIGURATION ======
-GCS_MARKET_BUCKET="marketplace-dist"
-SOURCE_PATH="content"
+GCS_MARKET_BUCKET="marketplace-dist-dev"
+SOURCE_PATH="upload-flow/builds/$CIRCLE_BRANCH/$CIRCLE_BUILD_NUM/content"
+
+# ====== UPDATING TESTING BUCKET ======
+echo "Copying production bucket files at: gs://marketplace-dist/content to testing bucket at path: gs://marketplace-dist-dev/$SOURCE_PATH ..."
+gsutil -m cp -r "gs://marketplace-dist/content" "gs://marketplace-dist-dev/$SOURCE_PATH" > "$CIRCLE_ARTIFACTS/logs/Prepare Content Packs For Testing.log" 2>&1
+echo "Finished copying successfully."
+# ====== UPDATING TESTING BUCKET ======
 
 echo "Copying master files at: gs://$GCS_MARKET_BUCKET/$SOURCE_PATH to target path: gs://$CONTENT_FULL_TARGET_PATH ..."
 gsutil -m cp -r "gs://$GCS_MARKET_BUCKET/$SOURCE_PATH" "gs://$CONTENT_FULL_TARGET_PATH" > "$CIRCLE_ARTIFACTS/logs/Prepare Content Packs For Testing.log" 2>&1
diff --git a/Tests/scripts/slack_notifier.py b/Tests/scripts/slack_notifier.py
index 6dcff82f8..9c575d060 100644
--- a/Tests/scripts/slack_notifier.py
+++ b/Tests/scripts/slack_notifier.py
@@ -285,7 +285,7 @@ def slack_notifier(build_url, slack_token, test_type, env_results_file_name=None
     branch_name_reg = re.search(r'\* (.*)', branches)
     branch_name = branch_name_reg.group(1)
 
-    if branch_name == 'master':
+    if branch_name == 'modified-pack-dates-test':
         logging.info("Extracting build status")
         if test_type == UNITTESTS_TYPE:
             logging.info("Starting Slack notifications about nightly build - unit tests")
@@ -313,7 +313,7 @@ def slack_notifier(build_url, slack_token, test_type, env_results_file_name=None
         slack_client = SlackClient(slack_token)
         slack_client.api_call(
             "chat.postMessage",
-            json={'channel': 'dmst-content-team',
+            json={'channel': 'dmst-bucket-upload',
                   'username': 'Content CircleCI',
                   'as_user': 'False',
                   'attachments': content_team_attachments}
diff --git a/Utils/trigger_force_upload_pack_to_production.sh b/Utils/trigger_force_upload_pack_to_production.sh
index 2571b1d9f..e79010041 100755
--- a/Utils/trigger_force_upload_pack_to_production.sh
+++ b/Utils/trigger_force_upload_pack_to_production.sh
@@ -12,7 +12,7 @@ trigger_build_url="https://circleci.com/api/v2/project/github/demisto/content/pi
 
 post_data=$(cat <<-EOF
 {
-  "branch": "master",
+  "branch": "modified-pack-dates-test",
   "parameters": {
     "force_pack_upload": "true",
     "packs_to_upload": "${_packs}"
diff --git a/Utils/trigger_upload_packs_to_production.sh b/Utils/trigger_upload_packs_to_production.sh
index 6312c257c..aabe87f77 100755
--- a/Utils/trigger_upload_packs_to_production.sh
+++ b/Utils/trigger_upload_packs_to_production.sh
@@ -11,7 +11,7 @@ trigger_build_url="https://circleci.com/api/v2/project/github/demisto/content/pi
 
 post_data=$(cat <<-EOF
 {
-  "branch": "master",
+  "branch": "modified-pack-dates-test",
   "parameters": {
     "bucket_upload": "true"
   }
